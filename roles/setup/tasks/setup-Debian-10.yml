---
# NOTE: Synchronize changes with README.md

# Tasks for Debian and Ubuntu have been unified in a single file because of similarities between both distributions.

# No need to update apt cache here because role jm1.pkg.setup handles apt cache updates already

- name: Satisfy requirements for collection jm1.openstack on Debian 10 (Buster) and Ubuntu 18.04 LTS (Bionic Beaver)
  jm1.pkg.meta_pkg:
    name: "jm1-openstack-setup"
    version: "2"
    depends:
    - jm1-pkg-setup
    - python-backports.tempfile

- name: Upgrade pip from PyPI as that is the single most common cause of installation problems
  # Python module openstacksdk depends on Python module cryptography which fails to build with older pip versions.
  # Ref.: https://cryptography.io/en/latest/installation.html
  ansible.builtin.pip:
    name: pip
    executable: '{{ item }}'
    extra_args: --upgrade
  # Install packages for Python 2 and 3, because Ansible might be executed with both interpreters
  loop:
  - pip2
  - pip3

# An upgrade of Python package python-openstackclient requires an upgrade of PyYAML as well. During upgrade of PyYAML
# pip will try to uninstall previously installed releases of PyYAML which fails on Debian 10 (Buster) and Ubuntu 18.04 
# LTS (Bionic Beaver) with error message:
#
#    Attempting uninstall: PyYAML
#      Found existing installation: PyYAML 3.12
#  ERROR: Cannot uninstall 'PyYAML'. It is a distutils installed project and thus we cannot accurately determine which 
#  files belong to it which would lead to only a partial uninstall.
#
# To workaround this uninstall issue, we will ask pip to ignore any installed Python packages when upgrading PyYAML, so
# pip won't try to uninstalled any existing packages.
#
- name: Get installed Python packages
  community.general.pip_package_info:
    clients:
    # Get packages for Python 2 and 3, because Ansible might be executed with both interpreters
    - pip2
    - pip3
  register: pip_package_info_result
#
- name: Assert that only one version of PyYAML is installed per pip client
  loop: '{{ pip_package_info_result.packages|dict2items }}'
  when: "'PyYAML' in item.value and item.value.PyYAML|length > 1"
  ansible.builtin.fail:
    msg: "Multiple versions of PyYAML found: {{ item.value.PyYAML }}"
#
- name: Install Python package PyYAML or upgrade it if installed version is outdated
  loop: '{{ pip_package_info_result.packages|dict2items }}'
  when: "'PyYAML' not in item.value or item.value.PyYAML[0].version is version('3.13', '<=', strict=True)"
  ansible.builtin.pip:
    name: pyyaml>3.13.0
    executable: '{{ item.key }}'
    state: forcereinstall
    extra_args: --ignore-installed

# With OpenStack SDK 0.17.2 aka packages python-openstacksdk and python3-openstacksdk from Debian 10 (Buster) some
# functionality of Ansible's OpenStack collection is not available. Newer Ansible releases do not support OpenStack
# SDK 0.11.3 from Ubuntu 18.04 LTS (Bionic Beaver) at all. Both SDK releases are old and unsupported by upstream.
# Instead a newer and still maintained release of openstacksdk is installed from PyPI.
#
- name: Satisfy requirements for collection jm1.openstack from PyPI
  ansible.builtin.pip:
    name:
    # Upgrade Python module openstacksdk for OpenStack Train release
    # NOTE: OpenStack SDK 0.45.0 from OpenStack Ussuri is the latest release for Python 2, but it cannot be imported.
    #       To workaround this issue, we install OpenStack SDK 0.36.5 (and compatible OpenStackClient 4.0.2) instead.
    #       Ref.: https://ask.openstack.org/en/question/128326/
    #
    - openstacksdk~=0.36.5
    # Newer OpenStack SDK releases require an upgrade of OpenStackClient
    - python-openstackclient~=4.0.2
    executable: '{{ item }}'
  # Install packages for Python 2 and 3, because Ansible might be executed with both interpreters
  loop:
  - pip2
  - pip3
